2020-11-20 11:36:51.202 +05:30 [INF] Starting web host
2020-11-20 11:36:55.587 +05:30 [INF] User profile is available. Using 'C:\Users\entvi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-11-20 11:36:55.684 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:36:55.744 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:36:55.954 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:36:55.982 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:36:55.983 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:36:56.627 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2020-11-20 11:36:56.627 +05:30 [INF] Hosting environment: Development
2020-11-20 11:36:56.627 +05:30 [INF] Content root path: C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker
2020-11-20 11:36:56.671 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger  
2020-11-20 11:36:56.671 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:36:56.859 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:36:56.893 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/index.html  
2020-11-20 11:36:56.904 +05:30 [INF] Request finished in 234.2586ms 302 
2020-11-20 11:36:56.981 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:36:56.986 +05:30 [INF] Request finished in 319.4073ms 200 application/json
2020-11-20 11:36:57.013 +05:30 [INF] Received HTTP response after 1026.0918ms - "OK"
2020-11-20 11:36:57.015 +05:30 [INF] End processing HTTP request after 1040.2161ms - "OK"
2020-11-20 11:36:57.074 +05:30 [INF] Request finished in 180.9817ms 200 text/html; charset=utf-8
2020-11-20 11:36:57.120 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui.css  
2020-11-20 11:36:57.122 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui-bundle.js  
2020-11-20 11:36:57.122 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js  
2020-11-20 11:36:57.205 +05:30 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2020-11-20 11:36:57.205 +05:30 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2020-11-20 11:36:57.205 +05:30 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2020-11-20 11:36:57.205 +05:30 [INF] Request finished in 85.4098ms 200 text/css
2020-11-20 11:36:57.205 +05:30 [INF] Request finished in 85.3054ms 200 application/javascript
2020-11-20 11:36:57.205 +05:30 [INF] Request finished in 83.9166ms 200 application/javascript
2020-11-20 11:36:57.397 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:36:57.412 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:36:57.419 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:36:57.425 +05:30 [DBG] Creating a new HealthReport history.
2020-11-20 11:36:57.502 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/v2/swagger.json  
2020-11-20 11:36:57.526 +05:30 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2020-11-20 11:36:57.537 +05:30 [INF] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 6), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2020-11-20 11:36:57.560 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:36:57.562 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:36:57.563 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/favicon-32x32.png  
2020-11-20 11:36:57.564 +05:30 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2020-11-20 11:36:57.564 +05:30 [INF] Request finished in 1.7064ms 200 image/png
2020-11-20 11:36:57.697 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2020-11-20 11:36:57.698 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2020-11-20 11:36:57.700 +05:30 [INF] Request finished in 1.6634ms 404 
2020-11-20 11:36:57.700 +05:30 [INF] Request finished in 2.2549ms 404 
2020-11-20 11:36:58.541 +05:30 [INF] Request finished in 1039.2106ms 200 application/json; charset=utf-8
2020-11-20 11:37:07.571 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:37:07.604 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:37:07.606 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:37:07.611 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:37:07.611 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:37:07.617 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:37:07.619 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:37:07.626 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:37:07.626 +05:30 [INF] Request finished in 9.0504ms 200 application/json
2020-11-20 11:37:07.626 +05:30 [INF] Received HTTP response after 15.3345ms - "OK"
2020-11-20 11:37:07.626 +05:30 [INF] End processing HTTP request after 15.7722ms - "OK"
2020-11-20 11:37:07.628 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:37:07.648 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:37:07.649 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:37:07.654 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:37:07.662 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:37:07.664 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:37:07.671 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:37:07.671 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:38:23.723 +05:30 [INF] Starting web host
2020-11-20 11:38:29.642 +05:30 [INF] User profile is available. Using 'C:\Users\entvi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-11-20 11:38:29.722 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:38:29.781 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:38:29.973 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:38:30.000 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:38:30.001 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:38:30.543 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2020-11-20 11:38:30.543 +05:30 [INF] Hosting environment: Development
2020-11-20 11:38:30.543 +05:30 [INF] Content root path: C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker
2020-11-20 11:38:30.587 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger  
2020-11-20 11:38:30.587 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:38:30.727 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:38:30.753 +05:30 [INF] Request finished in 167.243ms 302 
2020-11-20 11:38:30.754 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/index.html  
2020-11-20 11:38:30.846 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:38:30.863 +05:30 [INF] Request finished in 281.296ms 200 application/json
2020-11-20 11:38:30.879 +05:30 [INF] Received HTTP response after 872.4226ms - "OK"
2020-11-20 11:38:30.881 +05:30 [INF] End processing HTTP request after 889.0672ms - "OK"
2020-11-20 11:38:30.951 +05:30 [INF] Request finished in 196.1545ms 200 text/html; charset=utf-8
2020-11-20 11:38:30.995 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui.css  
2020-11-20 11:38:30.997 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui-bundle.js  
2020-11-20 11:38:30.997 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js  
2020-11-20 11:38:31.067 +05:30 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2020-11-20 11:38:31.067 +05:30 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2020-11-20 11:38:31.067 +05:30 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2020-11-20 11:38:31.067 +05:30 [INF] Request finished in 70.7884ms 200 application/javascript
2020-11-20 11:38:31.067 +05:30 [INF] Request finished in 72.0494ms 200 text/css
2020-11-20 11:38:31.067 +05:30 [INF] Request finished in 70.2358ms 200 application/javascript
2020-11-20 11:38:31.250 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:38:31.262 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:38:31.267 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:38:31.273 +05:30 [DBG] Creating a new HealthReport history.
2020-11-20 11:38:31.362 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/v2/swagger.json  
2020-11-20 11:38:31.380 +05:30 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2020-11-20 11:38:31.393 +05:30 [INF] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 6), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2020-11-20 11:38:31.409 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:38:31.410 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:38:31.486 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2020-11-20 11:38:31.487 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2020-11-20 11:38:31.488 +05:30 [INF] Request finished in 0.8399ms 404 
2020-11-20 11:38:31.488 +05:30 [INF] Request finished in 1.8037ms 404 
2020-11-20 11:38:32.332 +05:30 [INF] Request finished in 970.1437ms 200 application/json; charset=utf-8
2020-11-20 11:38:41.422 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:38:41.450 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:38:41.451 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:38:41.456 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:38:41.456 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:38:41.460 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:38:41.461 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:38:41.468 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:38:41.468 +05:30 [INF] Request finished in 8.4417ms 200 application/json
2020-11-20 11:38:41.468 +05:30 [INF] Received HTTP response after 11.9854ms - "OK"
2020-11-20 11:38:41.468 +05:30 [INF] End processing HTTP request after 12.396ms - "OK"
2020-11-20 11:38:41.470 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:38:41.483 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:38:41.484 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:38:41.488 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:38:41.495 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:38:41.498 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:38:41.504 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:38:41.505 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:38:51.516 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:38:51.521 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:38:51.524 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:38:51.531 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:38:51.532 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:38:51.536 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:38:51.537 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:38:51.544 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:38:51.545 +05:30 [INF] Request finished in 9.2545ms 200 application/json
2020-11-20 11:38:51.545 +05:30 [INF] Received HTTP response after 12.7718ms - "OK"
2020-11-20 11:38:51.545 +05:30 [INF] End processing HTTP request after 13.7464ms - "OK"
2020-11-20 11:38:51.548 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:38:51.552 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:38:51.553 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:38:51.557 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:38:51.561 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:38:51.562 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:38:51.568 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:38:51.568 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:39:01.577 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:39:01.579 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:01.581 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:39:01.587 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:01.587 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:01.591 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:39:01.592 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:39:01.600 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:39:01.600 +05:30 [INF] Request finished in 9.368ms 200 application/json
2020-11-20 11:39:01.600 +05:30 [INF] Received HTTP response after 13.1294ms - "OK"
2020-11-20 11:39:01.601 +05:30 [INF] End processing HTTP request after 13.6434ms - "OK"
2020-11-20 11:39:01.603 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:01.610 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:39:01.611 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:01.615 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:39:01.619 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:01.620 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:01.627 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:39:01.627 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:39:02.954 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/get-token  
2020-11-20 11:39:02.959 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:02.961 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2020-11-20 11:39:02.998 +05:30 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2020-11-20 11:39:03.078 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2020-11-20 11:39:03.087 +05:30 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 82.6411ms
2020-11-20 11:39:03.087 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2020-11-20 11:39:03.087 +05:30 [INF] Request finished in 133.4488ms 200 text/plain; charset=utf-8
2020-11-20 11:39:03.146 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/users/1  
2020-11-20 11:39:03.147 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:03.147 +05:30 [INF] Request finished in 1.6694ms 204 
2020-11-20 11:39:03.150 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/users/1  
2020-11-20 11:39:03.196 +05:30 [INF] Successfully validated the token.
2020-11-20 11:39:03.203 +05:30 [INF] Authorization was successful.
2020-11-20 11:39:03.204 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:03.204 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2020-11-20 11:39:03.211 +05:30 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2020-11-20 11:39:03.219 +05:30 [DBG] Getting a user with id 1
2020-11-20 11:39:03.282 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:03.295 +05:30 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2020-11-20 11:39:03.304 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.UserModel'.
2020-11-20 11:39:03.315 +05:30 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 103.6668ms
2020-11-20 11:39:03.315 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2020-11-20 11:39:03.317 +05:30 [INF] Request finished in 166.6577ms 200 application/json; charset=utf-8
2020-11-20 11:39:03.428 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/time-entries/user/1/2020/11  
2020-11-20 11:39:03.428 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:03.428 +05:30 [INF] Request finished in 0.6328ms 204 
2020-11-20 11:39:03.431 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/time-entries/user/1/2020/11  
2020-11-20 11:39:03.432 +05:30 [INF] Successfully validated the token.
2020-11-20 11:39:03.432 +05:30 [INF] Authorization was successful.
2020-11-20 11:39:03.433 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:03.433 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2020-11-20 11:39:03.438 +05:30 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2020-11-20 11:39:03.443 +05:30 [DBG] Getting all time entries for month 2020-11 for user with id 1
2020-11-20 11:39:03.444 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:03.477 +05:30 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2020-11-20 11:39:03.478 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2020-11-20 11:39:03.482 +05:30 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 44.1427ms
2020-11-20 11:39:03.482 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2020-11-20 11:39:03.483 +05:30 [INF] Request finished in 51.3018ms 200 application/json; charset=utf-8
2020-11-20 11:39:06.012 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 11:39:06.013 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:06.014 +05:30 [INF] Request finished in 1.5916ms 204 
2020-11-20 11:39:06.017 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 11:39:06.018 +05:30 [INF] Successfully validated the token.
2020-11-20 11:39:06.019 +05:30 [INF] Authorization was successful.
2020-11-20 11:39:06.019 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:06.019 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 11:39:06.024 +05:30 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2020-11-20 11:39:06.035 +05:30 [DBG] Getting a page 1 of users with page size 5
2020-11-20 11:39:06.036 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:06.045 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 11:39:06.060 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2020-11-20 11:39:06.062 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:39:06.065 +05:30 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 41.6303ms
2020-11-20 11:39:06.066 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 11:39:06.066 +05:30 [INF] Request finished in 49.1391ms 200 application/json; charset=utf-8
2020-11-20 11:39:07.224 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 11:39:07.226 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:07.227 +05:30 [INF] Request finished in 6.8055ms 204 
2020-11-20 11:39:07.231 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 11:39:07.233 +05:30 [INF] Successfully validated the token.
2020-11-20 11:39:07.234 +05:30 [INF] Authorization was successful.
2020-11-20 11:39:07.235 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:07.235 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:39:07.248 +05:30 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2020-11-20 11:39:07.253 +05:30 [DBG] Getting a page 1 of clients with page size 5
2020-11-20 11:39:07.255 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:07.269 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 11:39:07.284 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2020-11-20 11:39:07.287 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:39:07.295 +05:30 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 46.7544ms
2020-11-20 11:39:07.297 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:39:07.298 +05:30 [INF] Request finished in 66.9438ms 200 application/json; charset=utf-8
2020-11-20 11:39:08.138 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 11:39:08.139 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:08.140 +05:30 [INF] Request finished in 2.0313ms 204 
2020-11-20 11:39:08.143 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 11:39:08.144 +05:30 [INF] Successfully validated the token.
2020-11-20 11:39:08.144 +05:30 [INF] Authorization was successful.
2020-11-20 11:39:08.145 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:39:08.145 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 11:39:08.149 +05:30 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2020-11-20 11:39:08.152 +05:30 [DBG] Getting a page 1 of projects with page size 5
2020-11-20 11:39:08.153 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:08.165 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2020-11-20 11:39:08.177 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2020-11-20 11:39:08.178 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:39:08.182 +05:30 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 33.1525ms
2020-11-20 11:39:08.183 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 11:39:08.183 +05:30 [INF] Request finished in 39.6121ms 200 application/json; charset=utf-8
2020-11-20 11:39:11.636 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:39:11.637 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:11.638 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:39:11.643 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:11.643 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:11.646 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:39:11.647 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:39:11.654 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:39:11.655 +05:30 [INF] Request finished in 9.4424ms 200 application/json
2020-11-20 11:39:11.655 +05:30 [INF] Received HTTP response after 12.1391ms - "OK"
2020-11-20 11:39:11.655 +05:30 [INF] End processing HTTP request after 12.6298ms - "OK"
2020-11-20 11:39:11.659 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:11.663 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:39:11.665 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:11.669 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:39:11.673 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:11.674 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:11.681 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:39:11.681 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:39:21.681 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:39:21.683 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:21.684 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:39:21.688 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:21.688 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:21.691 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:39:21.691 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:39:21.697 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:39:21.698 +05:30 [INF] Request finished in 6.768ms 200 application/json
2020-11-20 11:39:21.698 +05:30 [INF] Received HTTP response after 9.6552ms - "OK"
2020-11-20 11:39:21.698 +05:30 [INF] End processing HTTP request after 9.9996ms - "OK"
2020-11-20 11:39:21.699 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:21.703 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:39:21.704 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:21.708 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:39:21.711 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:21.711 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:21.718 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:39:21.718 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:39:31.727 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:39:31.728 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:31.729 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:39:31.733 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:31.733 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:31.736 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:39:31.737 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:39:31.744 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:39:31.744 +05:30 [INF] Request finished in 8.0733ms 200 application/json
2020-11-20 11:39:31.745 +05:30 [INF] Received HTTP response after 11.0915ms - "OK"
2020-11-20 11:39:31.745 +05:30 [INF] End processing HTTP request after 11.448ms - "OK"
2020-11-20 11:39:31.746 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:31.751 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:39:31.751 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:31.755 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:39:31.758 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:31.758 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:31.765 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:39:31.765 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:39:41.774 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:39:41.775 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:41.776 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:39:41.781 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:41.781 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:41.784 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:39:41.784 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:39:41.791 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:39:41.792 +05:30 [INF] Request finished in 8.183ms 200 application/json
2020-11-20 11:39:41.792 +05:30 [INF] Received HTTP response after 10.983ms - "OK"
2020-11-20 11:39:41.792 +05:30 [INF] End processing HTTP request after 11.346ms - "OK"
2020-11-20 11:39:41.795 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:41.800 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:39:41.801 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:41.805 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:39:41.808 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:41.810 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:41.817 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:39:41.817 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:39:51.827 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:39:51.828 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:39:51.830 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:39:51.835 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:51.835 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:39:51.839 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:39:51.839 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:39:51.848 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:39:51.848 +05:30 [INF] Request finished in 10.3201ms 200 application/json
2020-11-20 11:39:51.849 +05:30 [INF] Received HTTP response after 13.3034ms - "OK"
2020-11-20 11:39:51.849 +05:30 [INF] End processing HTTP request after 13.6588ms - "OK"
2020-11-20 11:39:51.851 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:51.855 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:39:51.856 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:39:51.860 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:39:51.863 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:51.864 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:39:51.870 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:39:51.870 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:40:01.882 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:40:01.882 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:40:01.883 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:40:01.888 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:01.889 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:01.892 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:40:01.892 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:40:01.899 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:40:01.899 +05:30 [INF] Request finished in 7.4955ms 200 application/json
2020-11-20 11:40:01.900 +05:30 [INF] Received HTTP response after 10.7797ms - "OK"
2020-11-20 11:40:01.900 +05:30 [INF] End processing HTTP request after 11.218ms - "OK"
2020-11-20 11:40:01.902 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:01.907 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:40:01.909 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:01.913 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:40:01.917 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:01.918 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:01.925 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:40:01.925 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:40:11.936 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:40:11.939 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:40:11.941 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:40:11.946 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:11.946 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:11.949 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:40:11.950 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:40:11.959 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:40:11.960 +05:30 [INF] Request finished in 11.1178ms 200 application/json
2020-11-20 11:40:11.960 +05:30 [INF] Received HTTP response after 13.4214ms - "OK"
2020-11-20 11:40:11.960 +05:30 [INF] End processing HTTP request after 13.7916ms - "OK"
2020-11-20 11:40:11.962 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:11.971 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:40:11.974 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:11.980 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:40:11.990 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:11.991 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:11.999 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:40:11.999 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:40:22.007 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:40:22.008 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:40:22.009 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:40:22.014 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:22.014 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:22.018 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:40:22.019 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:40:22.026 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:40:22.027 +05:30 [INF] Received HTTP response after 12.6362ms - "OK"
2020-11-20 11:40:22.027 +05:30 [INF] Request finished in 9.0212ms 200 application/json
2020-11-20 11:40:22.027 +05:30 [INF] End processing HTTP request after 13.131ms - "OK"
2020-11-20 11:40:22.034 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:22.039 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:40:22.040 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:22.045 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:40:22.050 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:22.050 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:22.059 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:40:22.059 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:40:32.072 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:40:32.075 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:40:32.076 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:40:32.080 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:32.080 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:32.088 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:40:32.088 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:40:32.095 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:40:32.096 +05:30 [INF] Request finished in 7.8443ms 200 application/json
2020-11-20 11:40:32.096 +05:30 [INF] Received HTTP response after 15.741ms - "OK"
2020-11-20 11:40:32.096 +05:30 [INF] End processing HTTP request after 16.0476ms - "OK"
2020-11-20 11:40:32.099 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:32.102 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:40:32.103 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:32.107 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:40:32.109 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:32.110 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:32.116 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:40:32.117 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:40:42.118 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:40:42.119 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:40:42.120 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:40:42.128 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:42.128 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:42.131 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:40:42.131 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:40:42.138 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:40:42.139 +05:30 [INF] Request finished in 8.1795ms 200 application/json
2020-11-20 11:40:42.144 +05:30 [INF] Received HTTP response after 16.3908ms - "OK"
2020-11-20 11:40:42.144 +05:30 [INF] End processing HTTP request after 16.7536ms - "OK"
2020-11-20 11:40:42.146 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:42.150 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:40:42.150 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:42.154 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:40:42.157 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:42.158 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:42.165 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:40:42.165 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:40:52.180 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:40:52.180 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:40:52.181 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:40:52.186 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:52.186 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:40:52.188 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:40:52.189 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:40:52.195 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:40:52.195 +05:30 [INF] Request finished in 7.5092ms 200 application/json
2020-11-20 11:40:52.196 +05:30 [INF] Received HTTP response after 9.8599ms - "OK"
2020-11-20 11:40:52.196 +05:30 [INF] End processing HTTP request after 10.197ms - "OK"
2020-11-20 11:40:52.197 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:52.201 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:40:52.202 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:40:52.206 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:40:52.209 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:52.210 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:40:52.217 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:40:52.217 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:41:02.220 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:41:02.221 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:41:02.222 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:41:02.227 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:02.227 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:02.230 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:41:02.231 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:41:02.239 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:41:02.239 +05:30 [INF] Request finished in 9.4453ms 200 application/json
2020-11-20 11:41:02.239 +05:30 [INF] Received HTTP response after 12.3427ms - "OK"
2020-11-20 11:41:02.240 +05:30 [INF] End processing HTTP request after 12.7274ms - "OK"
2020-11-20 11:41:02.241 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:02.247 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:41:02.248 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:02.253 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:41:02.257 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:02.258 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:02.265 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:41:02.265 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:41:12.274 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:41:12.275 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:41:12.276 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:41:12.283 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:12.283 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:12.286 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:41:12.287 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:41:12.297 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:41:12.297 +05:30 [INF] Request finished in 11.57ms 200 application/json
2020-11-20 11:41:12.298 +05:30 [INF] Received HTTP response after 14.608ms - "OK"
2020-11-20 11:41:12.298 +05:30 [INF] End processing HTTP request after 15.1078ms - "OK"
2020-11-20 11:41:12.300 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:12.306 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:41:12.307 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:12.313 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:41:12.318 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:12.319 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:12.327 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:41:12.328 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:41:22.339 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:41:22.339 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:41:22.340 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:41:22.345 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:22.345 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:22.348 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:41:22.348 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:41:22.356 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:41:22.356 +05:30 [INF] Request finished in 8.7276ms 200 application/json
2020-11-20 11:41:22.356 +05:30 [INF] Received HTTP response after 11.5762ms - "OK"
2020-11-20 11:41:22.357 +05:30 [INF] End processing HTTP request after 12.0911ms - "OK"
2020-11-20 11:41:22.358 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:22.363 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:41:22.364 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:22.368 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:41:22.372 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:22.372 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:22.378 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:41:22.378 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:41:32.388 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:41:32.389 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:41:32.390 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:41:32.396 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:32.397 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:32.399 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:41:32.400 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:41:32.406 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:41:32.406 +05:30 [INF] Request finished in 7.5008ms 200 application/json
2020-11-20 11:41:32.406 +05:30 [INF] Received HTTP response after 9.7544ms - "OK"
2020-11-20 11:41:32.407 +05:30 [INF] End processing HTTP request after 10.1862ms - "OK"
2020-11-20 11:41:32.409 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:32.413 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:41:32.413 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:32.418 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:41:32.421 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:32.421 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:32.430 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:41:32.430 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:41:42.432 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:41:42.433 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:41:42.433 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:41:42.438 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:42.438 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:42.440 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:41:42.441 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:41:42.447 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:41:42.447 +05:30 [INF] Request finished in 7.0332ms 200 application/json
2020-11-20 11:41:42.447 +05:30 [INF] Received HTTP response after 9.2562ms - "OK"
2020-11-20 11:41:42.448 +05:30 [INF] End processing HTTP request after 9.5622ms - "OK"
2020-11-20 11:41:42.449 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:42.453 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:41:42.454 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:42.459 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:41:42.463 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:42.464 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:42.477 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:41:42.477 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:41:52.480 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:41:52.481 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:41:52.482 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:41:52.486 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:52.486 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:41:52.489 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:41:52.490 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:41:52.499 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:41:52.500 +05:30 [INF] Request finished in 10.8756ms 200 application/json
2020-11-20 11:41:52.500 +05:30 [INF] Received HTTP response after 13.2589ms - "OK"
2020-11-20 11:41:52.500 +05:30 [INF] End processing HTTP request after 13.5796ms - "OK"
2020-11-20 11:41:52.501 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:52.509 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:41:52.510 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:41:52.515 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:41:52.518 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:52.519 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:41:52.527 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:41:52.527 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:42:02.539 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:42:02.540 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:42:02.541 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:42:02.547 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:02.547 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:02.549 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:42:02.550 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:42:02.557 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:42:02.557 +05:30 [INF] Request finished in 8.2367ms 200 application/json
2020-11-20 11:42:02.558 +05:30 [INF] Received HTTP response after 10.6798ms - "OK"
2020-11-20 11:42:02.558 +05:30 [INF] End processing HTTP request after 11.0074ms - "OK"
2020-11-20 11:42:02.559 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:02.566 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:42:02.567 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:02.571 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:42:02.574 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:02.575 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:02.582 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:42:02.583 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:42:12.593 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:42:12.594 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:42:12.595 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:42:12.599 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:12.599 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:12.602 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:42:12.602 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:42:12.609 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:42:12.609 +05:30 [INF] Request finished in 7.8598ms 200 application/json
2020-11-20 11:42:12.609 +05:30 [INF] Received HTTP response after 9.9495ms - "OK"
2020-11-20 11:42:12.609 +05:30 [INF] End processing HTTP request after 10.3938ms - "OK"
2020-11-20 11:42:12.611 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:12.615 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:42:12.616 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:12.620 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:42:12.623 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:12.624 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:12.631 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:42:12.631 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:42:22.632 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:42:22.633 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:42:22.634 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:42:22.638 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:22.638 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:22.640 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:42:22.641 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:42:22.647 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:42:22.648 +05:30 [INF] Request finished in 7.1819ms 200 application/json
2020-11-20 11:42:22.648 +05:30 [INF] Received HTTP response after 9.1968ms - "OK"
2020-11-20 11:42:22.648 +05:30 [INF] End processing HTTP request after 9.4635ms - "OK"
2020-11-20 11:42:22.649 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:22.653 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:42:22.654 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:22.658 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:42:22.661 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:22.661 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:22.668 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:42:22.668 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:42:32.669 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:42:32.670 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:42:32.671 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:42:32.675 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:32.675 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:32.682 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:42:32.682 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:42:32.688 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:42:32.689 +05:30 [INF] Received HTTP response after 14.0329ms - "OK"
2020-11-20 11:42:32.689 +05:30 [INF] Request finished in 7.2281ms 200 application/json
2020-11-20 11:42:32.689 +05:30 [INF] End processing HTTP request after 14.2801ms - "OK"
2020-11-20 11:42:32.695 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:32.700 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:42:32.700 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:32.705 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:42:32.707 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:32.708 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:32.714 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:42:32.715 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:42:42.714 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:42:42.715 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:42:42.716 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:42:42.720 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:42.721 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:42.723 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:42:42.723 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:42:42.730 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:42:42.730 +05:30 [INF] Request finished in 7.2586ms 200 application/json
2020-11-20 11:42:42.730 +05:30 [INF] Received HTTP response after 9.484ms - "OK"
2020-11-20 11:42:42.730 +05:30 [INF] End processing HTTP request after 9.7654ms - "OK"
2020-11-20 11:42:42.731 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:42.735 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:42:42.736 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:42.740 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:42:42.743 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:42.744 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:42.751 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:42:42.751 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:42:52.757 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:42:52.758 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:42:52.758 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:42:52.762 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:52.763 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:42:52.764 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:42:52.765 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:42:52.771 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:42:52.771 +05:30 [INF] Request finished in 6.987ms 200 application/json
2020-11-20 11:42:52.772 +05:30 [INF] Received HTTP response after 9.0502ms - "OK"
2020-11-20 11:42:52.772 +05:30 [INF] End processing HTTP request after 9.4313ms - "OK"
2020-11-20 11:42:52.773 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:52.782 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:42:52.782 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:42:52.786 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:42:52.789 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:52.789 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:42:52.795 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:42:52.795 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:43:02.796 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:43:02.797 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:43:02.797 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:43:02.801 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:02.801 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:02.804 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:43:02.804 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:43:02.811 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:43:02.815 +05:30 [INF] Request finished in 11.1373ms 200 application/json
2020-11-20 11:43:02.815 +05:30 [INF] Received HTTP response after 13.67ms - "OK"
2020-11-20 11:43:02.815 +05:30 [INF] End processing HTTP request after 13.9971ms - "OK"
2020-11-20 11:43:02.817 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:02.823 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:43:02.824 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:02.829 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:43:02.832 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:02.833 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:02.839 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:43:02.839 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:43:12.850 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:43:12.851 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:43:12.852 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:43:12.858 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:12.859 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:12.861 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:43:12.861 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:43:12.867 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:43:12.867 +05:30 [INF] Request finished in 6.9564ms 200 application/json
2020-11-20 11:43:12.868 +05:30 [INF] Received HTTP response after 9.0097ms - "OK"
2020-11-20 11:43:12.868 +05:30 [INF] End processing HTTP request after 9.3109ms - "OK"
2020-11-20 11:43:12.869 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:12.878 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:43:12.879 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:12.885 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:43:12.888 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:12.889 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:12.897 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:43:12.897 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:43:22.897 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:43:22.898 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:43:22.898 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:43:22.903 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:22.903 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:22.905 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:43:22.906 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:43:22.913 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:43:22.913 +05:30 [INF] Request finished in 7.777ms 200 application/json
2020-11-20 11:43:22.913 +05:30 [INF] Received HTTP response after 10.0245ms - "OK"
2020-11-20 11:43:22.913 +05:30 [INF] End processing HTTP request after 10.4802ms - "OK"
2020-11-20 11:43:22.915 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:22.920 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:43:22.921 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:22.925 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:43:22.928 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:22.929 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:22.938 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:43:22.938 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:43:32.946 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:43:32.947 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:43:32.948 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:43:32.952 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:32.952 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:32.954 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:43:32.955 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:43:32.961 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:43:32.961 +05:30 [INF] Request finished in 6.5499ms 200 application/json
2020-11-20 11:43:32.961 +05:30 [INF] Received HTTP response after 8.3744ms - "OK"
2020-11-20 11:43:32.961 +05:30 [INF] End processing HTTP request after 8.6891ms - "OK"
2020-11-20 11:43:32.962 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:32.967 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:43:32.968 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:32.972 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:43:32.975 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:32.975 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:32.983 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:43:32.983 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:43:42.992 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:43:42.993 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:43:42.993 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:43:42.998 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:42.998 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:42.999 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:43:43.000 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:43:43.005 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:43:43.006 +05:30 [INF] Request finished in 6.4857ms 200 application/json
2020-11-20 11:43:43.006 +05:30 [INF] Received HTTP response after 7.9254ms - "OK"
2020-11-20 11:43:43.006 +05:30 [INF] End processing HTTP request after 8.1645ms - "OK"
2020-11-20 11:43:43.007 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:43.011 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:43:43.011 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:43.016 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:43:43.018 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:43.019 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:43.024 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:43:43.024 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:43:53.026 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:43:53.027 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:43:53.028 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:43:53.032 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:53.033 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:43:53.035 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:43:53.035 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:43:53.046 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:43:53.046 +05:30 [INF] Request finished in 11.183ms 200 application/json
2020-11-20 11:43:53.046 +05:30 [INF] Received HTTP response after 13.2998ms - "OK"
2020-11-20 11:43:53.046 +05:30 [INF] End processing HTTP request after 13.5588ms - "OK"
2020-11-20 11:43:53.048 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:53.052 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:43:53.053 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:43:53.057 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:43:53.060 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:53.061 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:43:53.069 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:43:53.069 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:44:03.069 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:44:03.070 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:44:03.071 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:44:03.075 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:03.075 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:03.077 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:44:03.077 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:44:03.083 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:44:03.083 +05:30 [INF] Request finished in 6.034ms 200 application/json
2020-11-20 11:44:03.083 +05:30 [INF] Received HTTP response after 7.7339ms - "OK"
2020-11-20 11:44:03.083 +05:30 [INF] End processing HTTP request after 8.0223ms - "OK"
2020-11-20 11:44:03.084 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:03.087 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:44:03.088 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:03.096 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:44:03.098 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:03.099 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:03.105 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:44:03.105 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:44:13.106 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:44:13.107 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:44:13.107 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:44:13.111 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:13.111 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:13.113 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:44:13.113 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:44:13.120 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:44:13.121 +05:30 [INF] Request finished in 8.0677ms 200 application/json
2020-11-20 11:44:13.121 +05:30 [INF] Received HTTP response after 9.4882ms - "OK"
2020-11-20 11:44:13.121 +05:30 [INF] End processing HTTP request after 9.8449ms - "OK"
2020-11-20 11:44:13.122 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:13.126 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:44:13.127 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:13.131 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:44:13.133 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:13.134 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:13.141 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:44:13.141 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:44:23.148 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:44:23.149 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:44:23.150 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:44:23.154 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:23.154 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:23.156 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:44:23.156 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:44:23.161 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:44:23.162 +05:30 [INF] Request finished in 5.9548ms 200 application/json
2020-11-20 11:44:23.162 +05:30 [INF] Received HTTP response after 7.6485ms - "OK"
2020-11-20 11:44:23.162 +05:30 [INF] End processing HTTP request after 7.8705ms - "OK"
2020-11-20 11:44:23.164 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:23.169 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:44:23.170 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:23.174 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:44:23.176 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:23.177 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:23.185 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:44:23.185 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:44:33.197 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:44:33.197 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:44:33.203 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:44:33.207 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:33.207 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:33.214 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:44:33.215 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:44:33.220 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:44:33.221 +05:30 [INF] Request finished in 6.2907ms 200 application/json
2020-11-20 11:44:33.221 +05:30 [INF] Received HTTP response after 13.6243ms - "OK"
2020-11-20 11:44:33.221 +05:30 [INF] End processing HTTP request after 13.8674ms - "OK"
2020-11-20 11:44:33.222 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:33.226 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:44:33.227 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:33.235 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:44:33.237 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:33.238 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:33.247 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:44:33.247 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:44:43.259 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:44:43.260 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:44:43.261 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:44:43.265 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:43.265 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:43.266 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:44:43.267 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:44:43.273 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:44:43.273 +05:30 [INF] Received HTTP response after 8.4066ms - "OK"
2020-11-20 11:44:43.273 +05:30 [INF] Request finished in 7.073ms 200 application/json
2020-11-20 11:44:43.273 +05:30 [INF] End processing HTTP request after 8.6675ms - "OK"
2020-11-20 11:44:43.281 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:43.285 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:44:43.286 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:43.289 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:44:43.292 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:43.293 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:43.299 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:44:43.299 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:44:53.309 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:44:53.310 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:44:53.310 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:44:53.315 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:53.315 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:44:53.316 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:44:53.317 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:44:53.324 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:44:53.325 +05:30 [INF] Request finished in 8.3111ms 200 application/json
2020-11-20 11:44:53.325 +05:30 [INF] Received HTTP response after 10.0595ms - "OK"
2020-11-20 11:44:53.325 +05:30 [INF] End processing HTTP request after 10.3163ms - "OK"
2020-11-20 11:44:53.326 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:53.330 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:44:53.331 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:44:53.335 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:44:53.338 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:53.339 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:44:53.345 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:44:53.345 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:45:03.352 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:45:03.352 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:45:03.353 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:45:03.358 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:03.358 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:03.360 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:45:03.360 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:45:03.366 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:45:03.367 +05:30 [INF] Request finished in 6.9676ms 200 application/json
2020-11-20 11:45:03.367 +05:30 [INF] Received HTTP response after 8.6402ms - "OK"
2020-11-20 11:45:03.367 +05:30 [INF] End processing HTTP request after 8.9117ms - "OK"
2020-11-20 11:45:03.368 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:03.373 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:45:03.374 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:03.378 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:45:03.381 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:03.382 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:03.393 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:45:03.394 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:45:13.401 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:45:13.402 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:45:13.403 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:45:13.407 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:13.407 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:13.409 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:45:13.409 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:45:13.416 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:45:13.417 +05:30 [INF] Request finished in 8.2754ms 200 application/json
2020-11-20 11:45:13.417 +05:30 [INF] Received HTTP response after 9.6954ms - "OK"
2020-11-20 11:45:13.417 +05:30 [INF] End processing HTTP request after 9.9323ms - "OK"
2020-11-20 11:45:13.419 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:13.423 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:45:13.424 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:13.428 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:45:13.431 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:13.432 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:13.439 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:45:13.440 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:45:23.448 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:45:23.448 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:45:23.449 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:45:23.453 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:23.453 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:23.454 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:45:23.455 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:45:23.460 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:45:23.460 +05:30 [INF] Request finished in 6.2391ms 200 application/json
2020-11-20 11:45:23.461 +05:30 [INF] Received HTTP response after 7.8828ms - "OK"
2020-11-20 11:45:23.461 +05:30 [INF] End processing HTTP request after 8.1268ms - "OK"
2020-11-20 11:45:23.462 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:23.467 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:45:23.468 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:23.473 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:45:23.476 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:23.477 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:23.485 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:45:23.485 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:45:33.488 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:45:33.488 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:45:33.489 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:45:33.494 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:33.495 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:33.496 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:45:33.497 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:45:33.502 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:45:33.502 +05:30 [INF] Request finished in 6.1241ms 200 application/json
2020-11-20 11:45:33.502 +05:30 [INF] Received HTTP response after 7.6782ms - "OK"
2020-11-20 11:45:33.502 +05:30 [INF] End processing HTTP request after 7.9048ms - "OK"
2020-11-20 11:45:33.503 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:33.507 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:45:33.508 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:33.513 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:45:33.516 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:33.517 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:33.524 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:45:33.524 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:45:43.527 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:45:43.527 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:45:43.528 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:45:43.532 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:43.532 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:43.533 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:45:43.534 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:45:43.539 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:45:43.540 +05:30 [INF] Request finished in 6.542ms 200 application/json
2020-11-20 11:45:43.540 +05:30 [INF] Received HTTP response after 8.1097ms - "OK"
2020-11-20 11:45:43.540 +05:30 [INF] End processing HTTP request after 8.3441ms - "OK"
2020-11-20 11:45:43.541 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:43.545 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:45:43.546 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:43.549 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:45:43.552 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:43.552 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:43.559 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:45:43.559 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:45:53.570 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:45:53.570 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:45:53.571 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:45:53.575 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:53.575 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:45:53.576 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:45:53.577 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:45:53.583 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:45:53.583 +05:30 [INF] Request finished in 6.4902ms 200 application/json
2020-11-20 11:45:53.583 +05:30 [INF] Received HTTP response after 7.9146ms - "OK"
2020-11-20 11:45:53.583 +05:30 [INF] End processing HTTP request after 8.1384ms - "OK"
2020-11-20 11:45:53.584 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:53.588 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:45:53.588 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:45:53.592 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:45:53.595 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:53.596 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:45:53.604 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:45:53.604 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:46:03.616 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:46:03.616 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:46:03.617 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:46:03.622 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:03.622 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:03.624 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:46:03.624 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:46:03.631 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:46:03.631 +05:30 [INF] Request finished in 7.8567ms 200 application/json
2020-11-20 11:46:03.631 +05:30 [INF] Received HTTP response after 9.5319ms - "OK"
2020-11-20 11:46:03.632 +05:30 [INF] End processing HTTP request after 9.8707ms - "OK"
2020-11-20 11:46:03.634 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:03.640 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:46:03.641 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:03.646 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:46:03.650 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:03.651 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:03.660 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:46:03.660 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:46:13.674 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:46:13.674 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:46:13.675 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:46:13.680 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:13.680 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:13.682 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:46:13.682 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:46:13.688 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:46:13.688 +05:30 [INF] Request finished in 6.7877ms 200 application/json
2020-11-20 11:46:13.688 +05:30 [INF] Received HTTP response after 8.387ms - "OK"
2020-11-20 11:46:13.688 +05:30 [INF] End processing HTTP request after 8.638ms - "OK"
2020-11-20 11:46:13.689 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:13.698 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:46:13.698 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:13.702 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:46:13.705 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:13.705 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:13.713 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:46:13.714 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:46:23.715 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:46:23.715 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:46:23.716 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:46:23.720 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:23.720 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:23.722 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:46:23.722 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:46:23.728 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:46:23.728 +05:30 [INF] Request finished in 6.8169ms 200 application/json
2020-11-20 11:46:23.728 +05:30 [INF] Received HTTP response after 8.3027ms - "OK"
2020-11-20 11:46:23.728 +05:30 [INF] End processing HTTP request after 8.5767ms - "OK"
2020-11-20 11:46:23.729 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:23.733 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:46:23.734 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:23.738 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:46:23.740 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:23.741 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:23.747 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:46:23.747 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:46:33.752 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:46:33.752 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:46:33.753 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:46:33.757 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:33.757 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:33.763 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:46:33.764 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:46:33.769 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:46:33.769 +05:30 [INF] Request finished in 5.9668ms 200 application/json
2020-11-20 11:46:33.769 +05:30 [INF] Received HTTP response after 12.1345ms - "OK"
2020-11-20 11:46:33.769 +05:30 [INF] End processing HTTP request after 12.3803ms - "OK"
2020-11-20 11:46:33.771 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:33.776 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:46:33.777 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:33.780 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:46:33.783 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:33.784 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:33.791 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:46:33.792 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:46:43.793 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:46:43.793 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:46:43.794 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:46:43.799 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:43.799 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:43.801 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:46:43.801 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:46:43.806 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:46:43.807 +05:30 [INF] Request finished in 6.2264ms 200 application/json
2020-11-20 11:46:43.807 +05:30 [INF] Received HTTP response after 8.0271ms - "OK"
2020-11-20 11:46:43.807 +05:30 [INF] End processing HTTP request after 8.2789ms - "OK"
2020-11-20 11:46:43.808 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:43.812 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:46:43.813 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:43.818 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:46:43.821 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:43.821 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:43.828 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:46:43.828 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:46:53.837 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:46:53.837 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:46:53.838 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:46:53.842 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:53.842 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:46:53.844 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:46:53.844 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:46:53.850 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:46:53.850 +05:30 [INF] Request finished in 6.189ms 200 application/json
2020-11-20 11:46:53.850 +05:30 [INF] Received HTTP response after 7.8955ms - "OK"
2020-11-20 11:46:53.850 +05:30 [INF] End processing HTTP request after 8.1231ms - "OK"
2020-11-20 11:46:53.851 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:53.855 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:46:53.856 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:46:53.860 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:46:53.862 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:53.863 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:46:53.869 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:46:53.869 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:47:03.882 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:47:03.882 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:47:03.883 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:47:03.887 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:03.887 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:03.889 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:47:03.889 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:47:03.895 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:47:03.895 +05:30 [INF] Request finished in 6.9118ms 200 application/json
2020-11-20 11:47:03.895 +05:30 [INF] Received HTTP response after 8.6096ms - "OK"
2020-11-20 11:47:03.896 +05:30 [INF] End processing HTTP request after 8.9002ms - "OK"
2020-11-20 11:47:03.897 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:03.901 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:47:03.901 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:03.905 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:47:03.907 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:03.908 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:03.914 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:47:03.914 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:47:13.918 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:47:13.918 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:47:13.919 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:47:13.923 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:13.923 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:13.925 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:47:13.926 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:47:13.931 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:47:13.931 +05:30 [INF] Request finished in 6.4758ms 200 application/json
2020-11-20 11:47:13.931 +05:30 [INF] Received HTTP response after 8.3026ms - "OK"
2020-11-20 11:47:13.931 +05:30 [INF] End processing HTTP request after 8.5481ms - "OK"
2020-11-20 11:47:13.933 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:13.936 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:47:13.937 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:13.942 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:47:13.944 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:13.945 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:13.952 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:47:13.952 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:47:23.961 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:47:23.961 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:47:23.961 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:47:23.965 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:23.965 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:23.967 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:47:23.967 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:47:23.973 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:47:23.973 +05:30 [INF] Request finished in 6.5123ms 200 application/json
2020-11-20 11:47:23.973 +05:30 [INF] Received HTTP response after 8.3622ms - "OK"
2020-11-20 11:47:23.974 +05:30 [INF] End processing HTTP request after 8.6031ms - "OK"
2020-11-20 11:47:23.975 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:23.979 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:47:23.980 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:23.984 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:47:23.987 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:23.987 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:23.994 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:47:23.994 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:47:34.001 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:47:34.001 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:47:34.002 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:47:34.006 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:34.006 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:34.008 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:47:34.008 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:47:34.014 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:47:34.014 +05:30 [INF] Request finished in 6.4603ms 200 application/json
2020-11-20 11:47:34.014 +05:30 [INF] Received HTTP response after 7.9968ms - "OK"
2020-11-20 11:47:34.014 +05:30 [INF] End processing HTTP request after 8.2487ms - "OK"
2020-11-20 11:47:34.015 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:34.020 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:47:34.021 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:34.026 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:47:34.029 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:34.030 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:34.038 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:47:34.038 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:47:44.039 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:47:44.039 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:47:44.039 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:47:44.043 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:44.043 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:44.045 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:47:44.045 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:47:44.052 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:47:44.052 +05:30 [INF] Request finished in 7.6722ms 200 application/json
2020-11-20 11:47:44.052 +05:30 [INF] Received HTTP response after 9.0847ms - "OK"
2020-11-20 11:47:44.052 +05:30 [INF] End processing HTTP request after 9.3877ms - "OK"
2020-11-20 11:47:44.055 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:44.062 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:47:44.063 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:44.071 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:47:44.075 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:44.076 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:44.084 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:47:44.084 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:47:54.095 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:47:54.095 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:47:54.096 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:47:54.101 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:54.101 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:47:54.102 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:47:54.103 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:47:54.110 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:47:54.110 +05:30 [INF] Request finished in 7.6713ms 200 application/json
2020-11-20 11:47:54.110 +05:30 [INF] Received HTTP response after 9.2029ms - "OK"
2020-11-20 11:47:54.110 +05:30 [INF] End processing HTTP request after 9.5673ms - "OK"
2020-11-20 11:47:54.111 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:54.116 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:47:54.118 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:47:54.123 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:47:54.127 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:54.128 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:47:54.135 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:47:54.135 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:48:04.136 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:48:04.137 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:04.137 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:48:04.142 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:04.142 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:04.143 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:48:04.144 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:48:04.149 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:48:04.150 +05:30 [INF] Received HTTP response after 8.1986ms - "OK"
2020-11-20 11:48:04.150 +05:30 [INF] Request finished in 6.518ms 200 application/json
2020-11-20 11:48:04.150 +05:30 [INF] End processing HTTP request after 8.4671ms - "OK"
2020-11-20 11:48:04.152 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:04.157 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:48:04.157 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:04.161 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:48:04.163 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:04.164 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:04.170 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:48:04.170 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:48:14.183 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:48:14.184 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:14.185 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:48:14.190 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:14.190 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:14.192 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:48:14.193 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:48:14.199 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:48:14.200 +05:30 [INF] Received HTTP response after 9.5239ms - "OK"
2020-11-20 11:48:14.200 +05:30 [INF] Request finished in 8.0532ms 200 application/json
2020-11-20 11:48:14.200 +05:30 [INF] End processing HTTP request after 9.8245ms - "OK"
2020-11-20 11:48:14.202 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:14.208 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:48:14.209 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:14.214 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:48:14.217 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:14.218 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:14.227 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:48:14.228 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:48:24.228 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:48:24.229 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:24.229 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:48:24.233 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:24.233 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:24.235 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:48:24.235 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:48:24.241 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:48:24.241 +05:30 [INF] Request finished in 6.1229ms 200 application/json
2020-11-20 11:48:24.241 +05:30 [INF] Received HTTP response after 7.5202ms - "OK"
2020-11-20 11:48:24.241 +05:30 [INF] End processing HTTP request after 7.7469ms - "OK"
2020-11-20 11:48:24.244 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:24.248 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:48:24.248 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:24.252 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:48:24.254 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:24.255 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:24.262 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:48:24.263 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:48:34.264 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:48:34.265 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:34.265 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:48:34.270 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:34.270 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:34.284 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:48:34.284 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:48:34.291 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:48:34.291 +05:30 [INF] Request finished in 7.198ms 200 application/json
2020-11-20 11:48:34.291 +05:30 [INF] Received HTTP response after 20.6986ms - "OK"
2020-11-20 11:48:34.291 +05:30 [INF] End processing HTTP request after 21.0145ms - "OK"
2020-11-20 11:48:34.292 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:34.296 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:48:34.297 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:34.301 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:48:34.304 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:34.305 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:34.311 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:48:34.312 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:48:44.320 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:48:44.321 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:44.321 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:48:44.325 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:44.325 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:44.328 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:48:44.328 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:48:44.335 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:48:44.336 +05:30 [INF] Received HTTP response after 10.3352ms - "OK"
2020-11-20 11:48:44.336 +05:30 [INF] Request finished in 8.6328ms 200 application/json
2020-11-20 11:48:44.336 +05:30 [INF] End processing HTTP request after 10.589ms - "OK"
2020-11-20 11:48:44.338 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:44.343 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:48:44.344 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:44.349 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:48:44.352 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:44.353 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:44.359 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:48:44.360 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:48:50.455 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 11:48:50.455 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:48:50.456 +05:30 [INF] Request finished in 0.4877ms 204 
2020-11-20 11:48:50.458 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 11:48:50.459 +05:30 [INF] Successfully validated the token.
2020-11-20 11:48:50.460 +05:30 [INF] Authorization was successful.
2020-11-20 11:48:50.460 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:48:50.460 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:48:50.460 +05:30 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2020-11-20 11:48:50.462 +05:30 [DBG] Getting a page 1 of clients with page size 5
2020-11-20 11:48:50.462 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:50.464 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 11:48:50.466 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2020-11-20 11:48:50.467 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:48:50.468 +05:30 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 7.4207ms
2020-11-20 11:48:50.468 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:48:50.468 +05:30 [INF] Request finished in 9.6961ms 200 application/json; charset=utf-8
2020-11-20 11:48:53.051 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 11:48:53.051 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:48:53.051 +05:30 [INF] Request finished in 0.58ms 204 
2020-11-20 11:48:53.054 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 11:48:53.055 +05:30 [INF] Successfully validated the token.
2020-11-20 11:48:53.055 +05:30 [INF] Authorization was successful.
2020-11-20 11:48:53.055 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:48:53.055 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 11:48:53.055 +05:30 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2020-11-20 11:48:53.057 +05:30 [DBG] Getting a page 1 of users with page size 5
2020-11-20 11:48:53.057 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:53.059 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 11:48:53.060 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2020-11-20 11:48:53.061 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:48:53.062 +05:30 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 6.5777ms
2020-11-20 11:48:53.062 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 11:48:53.062 +05:30 [INF] Request finished in 8.119ms 200 application/json; charset=utf-8
2020-11-20 11:48:54.369 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:48:54.369 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:48:54.370 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:48:54.374 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:54.374 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:48:54.375 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:48:54.376 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:48:54.381 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:48:54.381 +05:30 [INF] Request finished in 5.9025ms 200 application/json
2020-11-20 11:48:54.381 +05:30 [INF] Received HTTP response after 7.6034ms - "OK"
2020-11-20 11:48:54.381 +05:30 [INF] End processing HTTP request after 7.875ms - "OK"
2020-11-20 11:48:54.382 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:54.386 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:48:54.387 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:48:54.390 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:48:54.392 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:54.393 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:48:54.400 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:48:54.400 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:49:04.415 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:49:04.416 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:04.416 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:49:04.420 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:04.420 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:04.421 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:49:04.422 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:49:04.428 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:49:04.428 +05:30 [INF] Request finished in 6.42ms 200 application/json
2020-11-20 11:49:04.428 +05:30 [INF] Received HTTP response after 7.7825ms - "OK"
2020-11-20 11:49:04.428 +05:30 [INF] End processing HTTP request after 8.001ms - "OK"
2020-11-20 11:49:04.429 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:04.433 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:49:04.434 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:04.439 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:49:04.442 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:04.442 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:04.450 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:49:04.450 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:49:08.482 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 11:49:08.483 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:08.483 +05:30 [INF] Request finished in 1.0235ms 204 
2020-11-20 11:49:08.487 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 11:49:08.488 +05:30 [INF] Successfully validated the token.
2020-11-20 11:49:08.488 +05:30 [INF] Authorization was successful.
2020-11-20 11:49:08.488 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:08.488 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 11:49:08.489 +05:30 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2020-11-20 11:49:08.490 +05:30 [DBG] Getting a page 1 of users with page size 5
2020-11-20 11:49:08.491 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:08.492 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 11:49:08.494 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2020-11-20 11:49:08.496 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:49:08.496 +05:30 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 7.2437ms
2020-11-20 11:49:08.496 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 11:49:08.496 +05:30 [INF] Request finished in 9.7847ms 200 application/json; charset=utf-8
2020-11-20 11:49:09.278 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 11:49:09.279 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:09.279 +05:30 [INF] Request finished in 1.0097ms 204 
2020-11-20 11:49:09.282 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 11:49:09.283 +05:30 [INF] Successfully validated the token.
2020-11-20 11:49:09.283 +05:30 [INF] Authorization was successful.
2020-11-20 11:49:09.283 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:09.283 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:49:09.284 +05:30 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2020-11-20 11:49:09.286 +05:30 [DBG] Getting a page 1 of clients with page size 5
2020-11-20 11:49:09.286 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:09.287 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 11:49:09.289 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2020-11-20 11:49:09.290 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:49:09.291 +05:30 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 7.1565ms
2020-11-20 11:49:09.291 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:49:09.291 +05:30 [INF] Request finished in 8.9918ms 200 application/json; charset=utf-8
2020-11-20 11:49:13.938 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 11:49:13.938 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:13.939 +05:30 [INF] Request finished in 0.5843ms 204 
2020-11-20 11:49:13.943 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 11:49:13.943 +05:30 [INF] Successfully validated the token.
2020-11-20 11:49:13.944 +05:30 [INF] Authorization was successful.
2020-11-20 11:49:13.944 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:13.944 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 11:49:13.944 +05:30 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2020-11-20 11:49:13.946 +05:30 [DBG] Getting a page 1 of projects with page size 5
2020-11-20 11:49:13.946 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:13.948 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2020-11-20 11:49:13.952 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2020-11-20 11:49:13.954 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:49:13.955 +05:30 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 10.1845ms
2020-11-20 11:49:13.955 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 11:49:13.955 +05:30 [INF] Request finished in 12.2521ms 200 application/json; charset=utf-8
2020-11-20 11:49:14.466 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:49:14.467 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:14.467 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:49:14.471 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:14.471 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:14.473 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:49:14.473 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:49:14.479 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:49:14.479 +05:30 [INF] Request finished in 5.9094ms 200 application/json
2020-11-20 11:49:14.479 +05:30 [INF] Received HTTP response after 7.7148ms - "OK"
2020-11-20 11:49:14.479 +05:30 [INF] End processing HTTP request after 8.0174ms - "OK"
2020-11-20 11:49:14.480 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:14.484 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:49:14.485 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:14.489 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:49:14.491 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:14.492 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:14.498 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:49:14.498 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:49:20.553 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/clients?page=1&size=2147483647  
2020-11-20 11:49:20.553 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:20.553 +05:30 [INF] Request finished in 0.6866ms 204 
2020-11-20 11:49:20.556 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/clients?page=1&size=2147483647  
2020-11-20 11:49:20.558 +05:30 [INF] Successfully validated the token.
2020-11-20 11:49:20.558 +05:30 [INF] Authorization was successful.
2020-11-20 11:49:20.558 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:20.558 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:49:20.559 +05:30 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2020-11-20 11:49:20.560 +05:30 [DBG] Getting a page 1 of clients with page size 2147483647
2020-11-20 11:49:20.562 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:20.564 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 11:49:20.567 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2020-11-20 11:49:20.569 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:49:20.570 +05:30 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 11.3091ms
2020-11-20 11:49:20.570 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 11:49:20.571 +05:30 [INF] Request finished in 14.4375ms 200 application/json; charset=utf-8
2020-11-20 11:49:20.611 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/projects/1  
2020-11-20 11:49:20.612 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:20.612 +05:30 [INF] Request finished in 0.6424ms 204 
2020-11-20 11:49:20.616 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/projects/1  
2020-11-20 11:49:20.617 +05:30 [INF] Successfully validated the token.
2020-11-20 11:49:20.618 +05:30 [INF] Authorization was successful.
2020-11-20 11:49:20.618 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:20.618 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetById (TimeTracker)'
2020-11-20 11:49:20.632 +05:30 [INF] Route matched with {action = "GetById", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.ProjectModel]] GetById(Int64) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2020-11-20 11:49:20.635 +05:30 [DBG] Getting a project with id 1
2020-11-20 11:49:20.635 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:20.650 +05:30 [INF] Executing DbCommand [Parameters=[@__id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "Projects" AS "p"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ("p"."Id" = @__id_0) AND @__id_0 IS NOT NULL
LIMIT 2
2020-11-20 11:49:20.653 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.ProjectModel'.
2020-11-20 11:49:20.657 +05:30 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetById (TimeTracker) in 24.8038ms
2020-11-20 11:49:20.657 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetById (TimeTracker)'
2020-11-20 11:49:20.657 +05:30 [INF] Request finished in 41.543ms 200 application/json; charset=utf-8
2020-11-20 11:49:22.334 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 11:49:22.335 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:22.336 +05:30 [INF] Request finished in 1.5337ms 204 
2020-11-20 11:49:22.339 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 11:49:22.340 +05:30 [INF] Successfully validated the token.
2020-11-20 11:49:22.340 +05:30 [INF] Authorization was successful.
2020-11-20 11:49:22.340 +05:30 [INF] CORS policy execution successful.
2020-11-20 11:49:22.341 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 11:49:22.341 +05:30 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2020-11-20 11:49:22.342 +05:30 [DBG] Getting a page 1 of projects with page size 5
2020-11-20 11:49:22.343 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:22.344 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2020-11-20 11:49:22.347 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2020-11-20 11:49:22.349 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 11:49:22.350 +05:30 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 8.701ms
2020-11-20 11:49:22.350 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 11:49:22.350 +05:30 [INF] Request finished in 10.7865ms 200 application/json; charset=utf-8
2020-11-20 11:49:24.507 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:49:24.508 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:24.509 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:49:24.513 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:24.513 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:24.514 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:49:24.515 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:49:24.520 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:49:24.520 +05:30 [INF] Request finished in 6.1684ms 200 application/json
2020-11-20 11:49:24.520 +05:30 [INF] Received HTTP response after 7.6806ms - "OK"
2020-11-20 11:49:24.520 +05:30 [INF] End processing HTTP request after 7.8981ms - "OK"
2020-11-20 11:49:24.521 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:24.525 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:49:24.526 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:24.530 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:49:24.532 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:24.533 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:24.540 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:49:24.541 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 11:49:34.555 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 11:49:34.555 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 11:49:34.556 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 11:49:34.560 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:34.560 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 11:49:34.562 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 11:49:34.562 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 11:49:34.568 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 11:49:34.568 +05:30 [INF] Request finished in 6.4346ms 200 application/json
2020-11-20 11:49:34.568 +05:30 [INF] Received HTTP response after 7.9312ms - "OK"
2020-11-20 11:49:34.568 +05:30 [INF] End processing HTTP request after 8.2088ms - "OK"
2020-11-20 11:49:34.570 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:34.574 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 11:49:34.575 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 11:49:34.579 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 11:49:34.581 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:34.582 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 11:49:34.589 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 11:49:34.589 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 12:05:20.285 +05:30 [INF] Starting web host
2020-11-20 12:05:24.451 +05:30 [INF] User profile is available. Using 'C:\Users\entvi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-11-20 12:05:24.505 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 12:05:24.552 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:24.682 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 12:05:24.700 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:24.700 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:25.098 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2020-11-20 12:05:25.098 +05:30 [INF] Hosting environment: Development
2020-11-20 12:05:25.098 +05:30 [INF] Content root path: C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker
2020-11-20 12:05:25.129 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 12:05:25.129 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger  
2020-11-20 12:05:25.129 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/time-entries/user/1/2020/11  
2020-11-20 12:05:25.264 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:25.267 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 12:05:25.286 +05:30 [INF] Request finished in 157.1085ms 204 
2020-11-20 12:05:25.286 +05:30 [INF] Request finished in 158.4263ms 302 
2020-11-20 12:05:25.289 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/index.html  
2020-11-20 12:05:25.290 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/time-entries/user/1/2020/11  
2020-11-20 12:05:25.358 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 12:05:25.370 +05:30 [INF] Request finished in 243.3514ms 200 application/json
2020-11-20 12:05:25.381 +05:30 [INF] Received HTTP response after 677.4913ms - "OK"
2020-11-20 12:05:25.383 +05:30 [INF] End processing HTTP request after 687.764ms - "OK"
2020-11-20 12:05:25.433 +05:30 [INF] Request finished in 143.4684ms 200 text/html; charset=utf-8
2020-11-20 12:05:25.454 +05:30 [INF] Successfully validated the token.
2020-11-20 12:05:25.464 +05:30 [INF] Authorization was successful.
2020-11-20 12:05:25.464 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:25.464 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2020-11-20 12:05:25.479 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui.css  
2020-11-20 12:05:25.480 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui-bundle.js  
2020-11-20 12:05:25.480 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js  
2020-11-20 12:05:25.527 +05:30 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2020-11-20 12:05:25.527 +05:30 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2020-11-20 12:05:25.527 +05:30 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2020-11-20 12:05:25.527 +05:30 [INF] Request finished in 47.0405ms 200 application/javascript
2020-11-20 12:05:25.527 +05:30 [INF] Request finished in 48.5971ms 200 text/css
2020-11-20 12:05:25.528 +05:30 [INF] Request finished in 47.145ms 200 application/javascript
2020-11-20 12:05:25.537 +05:30 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2020-11-20 12:05:25.573 +05:30 [DBG] Getting all time entries for month 2020-11 for user with id 1
2020-11-20 12:05:25.623 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:25.642 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 12:05:25.646 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:25.651 +05:30 [DBG] Creating a new HealthReport history.
2020-11-20 12:05:25.684 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:25.716 +05:30 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."Hours", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2020-11-20 12:05:25.725 +05:30 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2020-11-20 12:05:25.725 +05:30 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."Hours", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2020-11-20 12:05:25.734 +05:30 [INF] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 6), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2020-11-20 12:05:25.761 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/swagger/v2/swagger.json  
2020-11-20 12:05:25.762 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 12:05:25.763 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 12:05:25.773 +05:30 [ERR] An exception occurred while iterating over the results of a query for context type 'TimeTracker.Data.TimeTrackerDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2020-11-20 12:05:25.845 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2020-11-20 12:05:25.889 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2020-11-20 12:05:25.891 +05:30 [INF] Request finished in 45.4403ms 404 
2020-11-20 12:05:25.891 +05:30 [INF] Request finished in 45.4404ms 404 
2020-11-20 12:05:25.901 +05:30 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 358.4362ms
2020-11-20 12:05:25.901 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2020-11-20 12:05:25.924 +05:30 [ERR] SQLite Error 1: 'no such column: u.Hours'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth(Int64 userId, Int32 year, Int32 month) in C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker\Controllers\TimeEntriesController.cs:line 78
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at TimeTracker.ErrorHandlingMiddleware.Invoke(HttpContext context) in C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker\ErrorHandlingMiddleware.cs:line 26
2020-11-20 12:05:25.980 +05:30 [INF] Request finished in 690.4411ms 500 application/problem+json
2020-11-20 12:05:26.655 +05:30 [INF] Request finished in 894.0669ms 200 application/json; charset=utf-8
2020-11-20 12:05:32.953 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 12:05:32.955 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:32.956 +05:30 [INF] Request finished in 2.4315ms 204 
2020-11-20 12:05:32.959 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/users?page=1&size=5  
2020-11-20 12:05:32.961 +05:30 [INF] Successfully validated the token.
2020-11-20 12:05:32.962 +05:30 [INF] Authorization was successful.
2020-11-20 12:05:32.962 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:32.963 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 12:05:32.972 +05:30 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2020-11-20 12:05:32.977 +05:30 [DBG] Getting a page 1 of users with page size 5
2020-11-20 12:05:32.978 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:32.987 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Hours", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 12:05:32.989 +05:30 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Hours", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 12:05:32.991 +05:30 [ERR] An exception occurred while iterating over the results of a query for context type 'TimeTracker.Data.TimeTrackerDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2020-11-20 12:05:33.037 +05:30 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 65.3629ms
2020-11-20 12:05:33.038 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2020-11-20 12:05:33.060 +05:30 [ERR] SQLite Error 1: 'no such column: u.Hours'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at TimeTracker.Controllers.UsersController.GetPage(Int32 page, Int32 size) in C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker\Controllers\UsersController.cs:line 68
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at TimeTracker.ErrorHandlingMiddleware.Invoke(HttpContext context) in C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker\ErrorHandlingMiddleware.cs:line 26
2020-11-20 12:05:33.064 +05:30 [INF] Request finished in 105.0937ms 500 application/problem+json
2020-11-20 12:05:34.831 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 12:05:34.833 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:34.835 +05:30 [INF] Request finished in 4.2024ms 204 
2020-11-20 12:05:34.838 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/clients?page=1&size=5  
2020-11-20 12:05:34.841 +05:30 [INF] Successfully validated the token.
2020-11-20 12:05:34.842 +05:30 [INF] Authorization was successful.
2020-11-20 12:05:34.842 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:34.842 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 12:05:34.852 +05:30 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2020-11-20 12:05:34.857 +05:30 [DBG] Getting a page 1 of clients with page size 5
2020-11-20 12:05:34.857 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:34.863 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2020-11-20 12:05:34.882 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2020-11-20 12:05:34.888 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 12:05:34.897 +05:30 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 43.5925ms
2020-11-20 12:05:34.897 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2020-11-20 12:05:34.897 +05:30 [INF] Request finished in 59.2841ms 200 application/json; charset=utf-8
2020-11-20 12:05:35.763 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 12:05:35.764 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:35.766 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 12:05:35.770 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:35.770 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:35.774 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 12:05:35.775 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 12:05:35.782 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 12:05:35.783 +05:30 [INF] Request finished in 8.5652ms 200 application/json
2020-11-20 12:05:35.783 +05:30 [INF] Received HTTP response after 12.6328ms - "OK"
2020-11-20 12:05:35.783 +05:30 [INF] End processing HTTP request after 13.0439ms - "OK"
2020-11-20 12:05:35.785 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:35.802 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 12:05:35.803 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:35.807 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 12:05:35.816 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:05:35.819 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:05:35.825 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 12:05:35.825 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 12:05:36.028 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 12:05:36.029 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:36.030 +05:30 [INF] Request finished in 1.9157ms 204 
2020-11-20 12:05:36.034 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/projects?page=1&size=5  
2020-11-20 12:05:36.035 +05:30 [INF] Successfully validated the token.
2020-11-20 12:05:36.035 +05:30 [INF] Authorization was successful.
2020-11-20 12:05:36.036 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:36.036 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 12:05:36.042 +05:30 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2020-11-20 12:05:36.046 +05:30 [DBG] Getting a page 1 of projects with page size 5
2020-11-20 12:05:36.047 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:36.057 +05:30 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2020-11-20 12:05:36.068 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2020-11-20 12:05:36.070 +05:30 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-11-20 12:05:36.074 +05:30 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 31.4794ms
2020-11-20 12:05:36.074 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2020-11-20 12:05:36.074 +05:30 [INF] Request finished in 41.0107ms 200 application/json; charset=utf-8
2020-11-20 12:05:43.256 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/get-token  
2020-11-20 12:05:43.256 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:43.257 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2020-11-20 12:05:43.259 +05:30 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2020-11-20 12:05:43.267 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2020-11-20 12:05:43.269 +05:30 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 9.5954ms
2020-11-20 12:05:43.269 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2020-11-20 12:05:43.269 +05:30 [INF] Request finished in 13.8765ms 200 text/plain; charset=utf-8
2020-11-20 12:05:43.293 +05:30 [INF] Request starting HTTP/2.0 OPTIONS https://localhost:44383/api/v2/users/2  
2020-11-20 12:05:43.293 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:43.293 +05:30 [INF] Request finished in 0.5749ms 204 
2020-11-20 12:05:43.297 +05:30 [INF] Request starting HTTP/2.0 GET https://localhost:44383/api/v2/users/2  
2020-11-20 12:05:43.298 +05:30 [INF] Successfully validated the token.
2020-11-20 12:05:43.298 +05:30 [INF] Authorization was successful.
2020-11-20 12:05:43.298 +05:30 [INF] CORS policy execution successful.
2020-11-20 12:05:43.298 +05:30 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2020-11-20 12:05:43.302 +05:30 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2020-11-20 12:05:43.304 +05:30 [DBG] Getting a user with id 2
2020-11-20 12:05:43.305 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:43.320 +05:30 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Hours", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2020-11-20 12:05:43.321 +05:30 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Hours", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2020-11-20 12:05:43.323 +05:30 [ERR] An exception occurred while iterating over the results of a query for context type 'TimeTracker.Data.TimeTrackerDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2020-11-20 12:05:43.373 +05:30 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 70.9991ms
2020-11-20 12:05:43.374 +05:30 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2020-11-20 12:05:43.397 +05:30 [ERR] SQLite Error 1: 'no such column: u.Hours'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such column: u.Hours'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.RelationalShapedQueryCompilingExpressionVisitor.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at TimeTracker.Controllers.UsersController.GetById(Int64 id) in C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker\Controllers\UsersController.cs:line 47
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Builder.Extensions.MapMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at TimeTracker.ErrorHandlingMiddleware.Invoke(HttpContext context) in C:\Users\entvi\Downloads\time-tracker-master\time-tracker-master\TimeTracker\ErrorHandlingMiddleware.cs:line 26
2020-11-20 12:05:43.400 +05:30 [INF] Request finished in 103.7204ms 500 application/problem+json
2020-11-20 12:05:45.838 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 12:05:45.842 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:45.845 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 12:05:45.851 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:45.851 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:45.854 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 12:05:45.855 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 12:05:45.861 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 12:05:45.862 +05:30 [INF] Request finished in 7.7342ms 200 application/json
2020-11-20 12:05:45.862 +05:30 [INF] Received HTTP response after 11.0079ms - "OK"
2020-11-20 12:05:45.862 +05:30 [INF] End processing HTTP request after 11.4861ms - "OK"
2020-11-20 12:05:45.864 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:45.869 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 12:05:45.871 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:45.875 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 12:05:45.880 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:05:45.881 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:05:45.888 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 12:05:45.888 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 12:05:55.888 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 12:05:55.890 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:05:55.891 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 12:05:55.896 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:55.896 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 12:05:55.898 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 12:05:55.899 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 12:05:55.906 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 12:05:55.906 +05:30 [INF] Request finished in 8.2723ms 200 application/json
2020-11-20 12:05:55.906 +05:30 [INF] Received HTTP response after 10.436ms - "OK"
2020-11-20 12:05:55.907 +05:30 [INF] End processing HTTP request after 10.7843ms - "OK"
2020-11-20 12:05:55.909 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:55.913 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 12:05:55.914 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:05:55.917 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 12:05:55.921 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:05:55.922 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:05:55.928 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 12:05:55.928 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 12:06:05.934 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 12:06:05.938 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:06:05.940 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 12:06:05.948 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 12:06:05.948 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 12:06:05.955 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 12:06:05.956 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 12:06:05.966 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 12:06:05.967 +05:30 [INF] Request finished in 13.1207ms 200 application/json
2020-11-20 12:06:05.967 +05:30 [INF] Received HTTP response after 18.9128ms - "OK"
2020-11-20 12:06:05.968 +05:30 [INF] End processing HTTP request after 19.7269ms - "OK"
2020-11-20 12:06:05.973 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:06:05.979 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 12:06:05.981 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:06:05.987 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 12:06:05.992 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:06:05.994 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:06:06.001 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 12:06:06.002 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
2020-11-20 12:06:16.012 +05:30 [DBG] Executing HealthCheck collector HostedService.
2020-11-20 12:06:16.013 +05:30 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2020-11-20 12:06:16.014 +05:30 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2020-11-20 12:06:16.020 +05:30 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2020-11-20 12:06:16.020 +05:30 [INF] Sending HTTP request GET "https://localhost:44383/health"
2020-11-20 12:06:16.023 +05:30 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2020-11-20 12:06:16.024 +05:30 [INF] Executing endpoint 'Health checks'
2020-11-20 12:06:16.031 +05:30 [INF] Executed endpoint 'Health checks'
2020-11-20 12:06:16.031 +05:30 [INF] Request finished in 8.1329ms 200 application/json
2020-11-20 12:06:16.031 +05:30 [INF] Received HTTP response after 11.0425ms - "OK"
2020-11-20 12:06:16.031 +05:30 [INF] End processing HTTP request after 11.3779ms - "OK"
2020-11-20 12:06:16.033 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:06:16.037 +05:30 [DBG] HealthReportCollector - health report execution history saved.
2020-11-20 12:06:16.038 +05:30 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2020-11-20 12:06:16.042 +05:30 [DBG] HealthReport history already exists and is in the same state, updating the values.
2020-11-20 12:06:16.046 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:06:16.046 +05:30 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2020-11-20 12:06:16.052 +05:30 [DBG] HealthReportCollector has completed.
2020-11-20 12:06:16.052 +05:30 [DBG] HealthCheck collector HostedService executed successfully.
